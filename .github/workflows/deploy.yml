name: deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-to-docker:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Write environment variables to file
        shell: pwsh
        env:
          AZURE_DATABASE_CREDENTIAL_SCOPE: ${{ secrets.AZURE_DATABASE_CREDENTIAL_SCOPE}}
          ODBC_DRIVER: ${{ secrets.ODBC_DRIVER}}
          RDP_SERVER: ${{ secrets.RDP_SERVER}}
          RDP_DATABASE: ${{ secrets.RDP_DATABASE}}
          FUSION_SERVER: ${{ secrets.FUSION_SERVER}}
          FUSION_DATABASE: ${{ secrets.FUSION_DATABASE}}
          AZURE_BLOB_STORAGE_URL: ${{ secrets.AZURE_BLOB_STORAGE_URL}}
          AZURE_STORAGE_ACCESS_KEY: ${{ secrets.AZURE_STORAGE_ACCESS_KEY}}
          DBT_PROJECT_DIR: ${{ secrets.DBT_PROJECT_DIR}}
          BI_PUBLISHER_URL: ${{ secrets.BI_PUBLISHER_URL}}
          UNHCR_EMAIL: ${{ secrets.UNHCR_EMAIL}}
          UNHCR_PASSWORD: ${{ secrets.UNHCR_PASSWORD}}
          TOTP_SECRET_KEY: ${{ secrets.TOTP_SECRET_KEY}}
          JOB_INFO_URL: ${{ secrets.JOB_INFO_URL}}
          OUTPUT_INFO_URL: ${{ secrets.OUTPUT_INFO_URL}}
          OUTPUT_DOWNLOAD_URL: ${{ secrets.OUTPUT_DOWNLOAD_URL}}
          MSRP_SERVER: ${{ secrets.MSRP_SERVER}}
          MSRP_DATABASE: ${{ secrets.MSRP_DATABASE}}
          MSRP_LOGIN: ${{ secrets.MSRP_LOGIN}}
          MSRP_PASSWORD: ${{ secrets.MSRP_PASSWORD}}
          POWER_BI_CREDENTIAL_SCOPE: ${{ secrets.POWER_BI_CREDENTIAL_SCOPE}}
          DER_GROUP_ID: ${{ secrets.DER_GROUP_ID}}
          DER_DATASET_ID: ${{ secrets.DER_DATASET_ID}}
          POWER_BI_QUERY_URI: ${{ secrets.POWER_BI_QUERY_URI}}
        run: |
          Set-Content -Path .env -Value "AZURE_DATABASE_CREDENTIAL_SCOPE=$env:AZURE_DATABASE_CREDENTIAL_SCOPE"
          Add-Content -Path .env -Value "ODBC_DRIVER=$env:ODBC_DRIVER"
          Add-Content -Path .env -Value "RDP_SERVER=$env:RDP_SERVER"
          Add-Content -Path .env -Value "RDP_DATABASE=$env:RDP_DATABASE"
          Add-Content -Path .env -Value "FUSION_SERVER=$env:FUSION_SERVER"
          Add-Content -Path .env -Value "FUSION_DATABASE=$env:FUSION_DATABASE"
          Add-Content -Path .env -Value "AZURE_BLOB_STORAGE_URL=$env:AZURE_BLOB_STORAGE_URL"
          Add-Content -Path .env -Value "AZURE_STORAGE_ACCESS_KEY=$env:AZURE_STORAGE_ACCESS_KEY"
          Add-Content -Path .env -Value "DBT_PROJECT_DIR=$env:DBT_PROJECT_DIR"
          Add-Content -Path .env -Value "BI_PUBLISHER_URL=$env:BI_PUBLISHER_URL"
          Add-Content -Path .env -Value "UNHCR_EMAIL=$env:UNHCR_EMAIL"
          Add-Content -Path .env -Value "UNHCR_PASSWORD=$env:UNHCR_PASSWORD"
          Add-Content -Path .env -Value "TOTP_SECRET_KEY=$env:TOTP_SECRET_KEY"
          Add-Content -Path .env -Value "JOB_INFO_URL=$env:JOB_INFO_URL"
          Add-Content -Path .env -Value "OUTPUT_INFO_URL=$env:OUTPUT_INFO_URL"
          Add-Content -Path .env -Value "OUTPUT_DOWNLOAD_URL=$env:OUTPUT_DOWNLOAD_URL"
          Add-Content -Path .env -Value "MSRP_SERVER=$env:MSRP_SERVER"
          Add-Content -Path .env -Value "MSRP_DATABASE=$env:MSRP_DATABASE"
          Add-Content -Path .env -Value "MSRP_LOGIN=$env:MSRP_LOGIN"
          Add-Content -Path .env -Value "MSRP_PASSWORD=$env:MSRP_PASSWORD"
          Add-Content -Path .env -Value "POWER_BI_CREDENTIAL_SCOPE=$env:POWER_BI_CREDENTIAL_SCOPE"
          Add-Content -Path .env -Value "DER_GROUP_ID=$env:DER_GROUP_ID"
          Add-Content -Path .env -Value "DER_DATASET_ID=$env:DER_DATASET_ID"
          Add-Content -Path .env -Value "POWER_BI_QUERY_URI=$env:POWER_BI_QUERY_URI"

      - name: Write azure cli credentials to file
        shell: pwsh
        env:
          AZURE_PROFILE_JSON: ${{ secrets.AZURE_PROFILE_JSON}}
          MSAL_TOKEN_CACHE_JSON: ${{ secrets.MSAL_TOKEN_CACHE_JSON}}
        run: |
          Set-Content -Path azureProfile.json -Value $env:AZURE_PROFILE_JSON
          Set-Content -Path msal_token_cache.json -Value $env:MSAL_TOKEN_CACHE_JSON

      - name: Stop and remove containers, networks
        run: docker compose down

      - name: Remove unused data
        run: docker system prune -f

      - name: Create and start containers
        run: docker compose up --build -d
