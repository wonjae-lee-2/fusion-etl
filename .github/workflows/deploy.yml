name: deploy

on:
  push:
    branches: ["main"]

jobs:
  deploy-to-docker:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Write secrets to file
        shell: pwsh
        env:
          AZURE_DATABASE_CREDENTIAL_SCOPE: ${{ secrets.AZURE_DATABASE_CREDENTIAL_SCOPE}}
          ODBC_DRIVER: ${{ secrets.ODBC_DRIVER}}
          RDP_SERVER: ${{ secrets.RDP_SERVER}}
          RDP_DATABASE: ${{ secrets.RDP_DATABASE}}
          FUSION_SERVER: ${{ secrets.FUSION_SERVER}}
          FUSION_DATABASE: ${{ secrets.FUSION_DATABASE}}
          AZURE_STORAGE_URL: ${{ secrets.AZURE_STORAGE_URL}}
          AZURE_STORAGE_ACCESS_KEY: ${{ secrets.AZURE_STORAGE_ACCESS_KEY}}
        run: |
          Set-Content -Path .env -Value "AZURE_DATABASE_CREDENTIAL_SCOPE=$env:AZURE_DATABASE_CREDENTIAL_SCOPE"
          Add-Content -Path .env -Value "ODBC_DRIVER=$env:ODBC_DRIVER"
          Add-Content -Path .env -Value "RDP_SERVER=$env:RDP_SERVER"
          Add-Content -Path .env -Value "RDP_DATABASE=$env:RDP_DATABASE"
          Add-Content -Path .env -Value "FUSION_SERVER=$env:FUSION_SERVER"
          Add-Content -Path .env -Value "FUSION_DATABASE=$env:FUSION_DATABASE"
          Add-Content -Path .env -Value "AZURE_STORAGE_URL=$env:AZURE_STORAGE_URL"
          Add-Content -Path .env -Value "AZURE_STORAGE_ACCESS_KEY=$env:AZURE_STORAGE_ACCESS_KEY"

      - name: Stop and remove containers, networks
        run: docker compose down

      - name: Create and start containers
        run: docker compose up --build -d
